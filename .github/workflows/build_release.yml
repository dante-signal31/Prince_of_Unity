name: build_release

on:
  workflow_dispatch: {}

jobs:
#  build_windows:
#    name: Build release for windows.
#    runs-on: windows-2019
#    steps:
#      - name: Get source code.
#        uses: actions/checkout@v3
#
#      - name: Cache generated files.
#        uses: actions/cache@v3
#        with:
#          path: Library
#          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
#          restore-keys: |
#            Library-
#
#      - name: Build game for windows.
#        uses: game-ci/unity-builder@v2
#        env:
#          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
#          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
#          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
#        with:
#          buildName: Prince of Unity
#          targetPlatform: StandaloneWindows64
#          unityVersion: auto
#          versioning: Semantic
#
#      - name: Upload Build
#        uses: actions/upload-artifact@v3
#        with:
#          name: WindowsBuild
#          path: build/StandaloneWindows64
          
  build_linux:
    name: Build release for linux.
    runs-on: ubuntu-latest
    steps:
      - name: Get source code.
        uses: actions/checkout@v3

      - name: Cache generated files.
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-

      - name: Build game for linux.
        uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          buildName: Prince of Unity
          targetPlatform: StandaloneLinux64
          unityVersion: auto
          buildsPath: build_linux
          versioning: Semantic
        
      - name: Upload Build
        uses: actions/upload-artifact@v3
        with:
          name: LinuxBuild
          path: build_linux/StandaloneLinux64

#  create_windows_installer:
#    name: Create windows installer.
#    needs: build_windows
#    runs-on: ubuntu-latest
#    steps:
#      - name: Get source code.
#        uses: actions/checkout@v3
#      
#      - name: Download windows build.
#        uses: actions/download-artifact@v3
#        with:
#          name: WindowsBuild
#          path: Build
#      
#      - name: Get folder structure and path.
#        run: |
#          pwd
#          ls -R

  create_linux_installer:
    name: Create linux installer.
    needs: build_linux
    runs-on: ubuntu-latest
    steps:
      - name: Get source code.
        uses: actions/checkout@v3

      - name: Download linux build.
        uses: actions/download-artifact@v3
        with:
          name: LinuxBuild
          path: Build

      - name: Remove unused build folder.
        run: rm -rf Build/'Prince of Unity_BackUpThisFolder_ButDontShipItWithYourGame'/
      
      - name: Change executable permission.
        run: chmod 755 Build/'Prince of Unity'
      
      - name: Get folder structure and path.
        run: |
          pwd
          ls -R